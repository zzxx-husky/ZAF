name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install dependencies
      run: |
        ${{github.workspace}}/scripts/install_libzmq.sh
        ${{github.workspace}}/scripts/install_gtest.sh
        ${{github.workspace}}/scripts/install_glog.sh
        ${{github.workspace}}/scripts/install_phmap.sh
        tail ~/.bashrc -n 12
        tail ${HOME}/.bashrc -n 12
        ls ~
        ls ${HOME}
        ls ${{github.workspace}}/scripts/

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        source ${HOME}/.bashrc
        echo ${ZMQ_ROOT}
        echo ${GTEST_ROOT}
        echo ${GLOG_ROOT}
        echo ${PHMAP_ROOT}
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      working-directory: ${{github.workspace}}/build
      # Build your program with the given configuration
      run: make all -j4

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./tests/Tests
      
